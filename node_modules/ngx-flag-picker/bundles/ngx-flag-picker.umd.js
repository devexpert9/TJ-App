(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('ngx-flag-picker', ['exports', '@angular/core', '@angular/common'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global['ngx-flag-picker'] = {}, global.ng.core, global.ng.common));
}(this, (function (exports, core, common) { 'use strict';

    var NgxFlagPickerComponent = /** @class */ (function () {
        function NgxFlagPickerComponent(renderer, changeDetectorRef) {
            this.renderer = renderer;
            this.changeDetectorRef = changeDetectorRef;
            this._isShowListCountryFlags = false;
            this.showFlags = true;
            this.showLabels = true;
            this.showArrow = true;
            this.changedCountryCode = new core.EventEmitter();
            this.outsideClickSelectFlags = function () { };
        }
        Object.defineProperty(NgxFlagPickerComponent.prototype, "isShowListCountryFlags", {
            get: function () {
                return this._isShowListCountryFlags;
            },
            set: function (value) {
                this._isShowListCountryFlags = value;
                this.changeDetectorRef.markForCheck();
            },
            enumerable: false,
            configurable: true
        });
        NgxFlagPickerComponent.prototype.getCountryLabel = function (countryCode) {
            return (this.customLabels && this.customLabels[countryCode]) ?
                this.customLabels[countryCode] :
                countryCode ? countryCode.toUpperCase() : '';
        };
        NgxFlagPickerComponent.prototype.toggleListCountryFlags = function () {
            if (this.isShowListCountryFlags) {
                this.closeListCountryFlags();
            }
            else {
                this.openListCountryFlags();
            }
        };
        NgxFlagPickerComponent.prototype.openListCountryFlags = function () {
            this.isShowListCountryFlags = true;
            this.subscribeOutsideClickSelectFlags();
        };
        NgxFlagPickerComponent.prototype.closeListCountryFlags = function () {
            this.isShowListCountryFlags = false;
            this.unsubscribeOutsideClickSelectFlags();
        };
        NgxFlagPickerComponent.prototype.changeSelectedCountryCode = function (value) {
            this.selectedCountryCode = value;
            this.closeListCountryFlags();
            this.changedCountryCode.emit(this.selectedCountryCode);
        };
        NgxFlagPickerComponent.prototype.subscribeOutsideClickSelectFlags = function () {
            var _this = this;
            this.outsideClickSelectFlags = this.renderer.listen('document', 'click', function (event) {
                if (!_this.selectFlagsElementRef.nativeElement.contains(event.target)) {
                    _this.closeListCountryFlags();
                }
            });
        };
        NgxFlagPickerComponent.prototype.unsubscribeOutsideClickSelectFlags = function () {
            if (this.outsideClickSelectFlags) {
                this.outsideClickSelectFlags();
                this.outsideClickSelectFlags = undefined;
            }
        };
        return NgxFlagPickerComponent;
    }());
    NgxFlagPickerComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'ngx-flag-picker',
                    template: "<div class=\"select-flags\" #selectFlags>\r\n  <div class=\"country-flag\" tabindex=\"0\" (click)=\"toggleListCountryFlags()\">\r\n    <span *ngIf=\"showFlags\" [ngClass]=\"{ 'flag-icon-margin-right': showLabels }\" class=\"flag-icon flag-icon-{{ selectedCountryCode }}\"></span>\r\n    <span *ngIf=\"showLabels\" class=\"country-code\">{{ getCountryLabel(selectedCountryCode) }}</span>\r\n    <span *ngIf=\"showArrow\">\u25BE</span>\r\n  </div>\r\n  <div class=\"list-country-flags\" *ngIf=\"isShowListCountryFlags\">\r\n    <div class=\"country-flag\" tabindex=\"0\" *ngFor=\"let code of countryCodes\" (click)=\"changeSelectedCountryCode(code)\">\r\n      <span>\r\n        <span *ngIf=\"showFlags\" [ngClass]=\"{ 'flag-icon-margin-right': showLabels }\" class=\"flag-icon flag-icon-{{ code }}\"></span>\r\n        <span *ngIf=\"showLabels\" class=\"country-code\">{{ getCountryLabel(code) }}</span>\r\n      </span>\r\n    </div>\r\n  </div>\r\n</div>",
                    styles: [".select-flags{display:inline-block;position:relative;color:#50575e;text-align:left}.flag-icon-margin-right{margin-right:6px}.country-flag{cursor:pointer;outline:none;white-space:nowrap}.list-country-flags{width:-moz-available;position:absolute;max-height:200px;margin-top:10px;padding:5px;background:#fff;border:1px solid #c7c7c7;overflow:auto;z-index:99999}"]
                },] }
    ];
    NgxFlagPickerComponent.ctorParameters = function () { return [
        { type: core.Renderer2 },
        { type: core.ChangeDetectorRef }
    ]; };
    NgxFlagPickerComponent.propDecorators = {
        selectedCountryCode: [{ type: core.Input }],
        countryCodes: [{ type: core.Input }],
        customLabels: [{ type: core.Input }],
        showFlags: [{ type: core.Input }],
        showLabels: [{ type: core.Input }],
        showArrow: [{ type: core.Input }],
        changedCountryCode: [{ type: core.Output }],
        selectFlagsElementRef: [{ type: core.ViewChild, args: ['selectFlags',] }]
    };

    var NgxFlagPickerModule = /** @class */ (function () {
        function NgxFlagPickerModule() {
        }
        return NgxFlagPickerModule;
    }());
    NgxFlagPickerModule.decorators = [
        { type: core.NgModule, args: [{
                    declarations: [
                        NgxFlagPickerComponent,
                    ],
                    imports: [
                        common.CommonModule,
                    ],
                    exports: [
                        NgxFlagPickerComponent,
                    ]
                },] }
    ];

    /**
     * Generated bundle index. Do not edit.
     */

    exports.NgxFlagPickerComponent = NgxFlagPickerComponent;
    exports.NgxFlagPickerModule = NgxFlagPickerModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ngx-flag-picker.umd.js.map
