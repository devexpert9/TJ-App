{"version":3,"file":"ngx-flag-picker.js","sources":["../../../projects/ngx-flag-picker/src/lib/ngx-flag-picker/ngx-flag-picker.component.ts","../../../projects/ngx-flag-picker/src/lib/ngx-flag-picker.module.ts","../../../projects/ngx-flag-picker/src/ngx-flag-picker.ts"],"sourcesContent":["import { Component, Input, Output, EventEmitter, ViewChild, ElementRef, Renderer2, ChangeDetectorRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-flag-picker',\r\n  templateUrl: './ngx-flag-picker.component.html',\r\n  styleUrls: ['./ngx-flag-picker.component.scss']\r\n})\r\nexport class NgxFlagPickerComponent {\r\n  private _isShowListCountryFlags = false;\r\n  set isShowListCountryFlags(value: boolean) {\r\n    this._isShowListCountryFlags = value;\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n  get isShowListCountryFlags(): boolean {\r\n    return this._isShowListCountryFlags;\r\n  }\r\n\r\n  @Input() selectedCountryCode: string;\r\n  @Input() countryCodes: string[];\r\n\r\n  @Input() customLabels: Record<string, string>;\r\n\r\n  @Input() showFlags = true;\r\n  @Input() showLabels = true;\r\n  @Input() showArrow = true;\r\n\r\n  @Output() changedCountryCode = new EventEmitter<string>();\r\n\r\n  @ViewChild('selectFlags') selectFlagsElementRef: ElementRef;\r\n\r\n  outsideClickSelectFlags = () => {};\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) { }\r\n\r\n  getCountryLabel(countryCode: string): string {\r\n    return (this.customLabels && this.customLabels[countryCode]) ?\r\n      this.customLabels[countryCode] :\r\n      countryCode ? countryCode.toUpperCase() : '';\r\n  }\r\n\r\n  public toggleListCountryFlags(): void {\r\n    if (this.isShowListCountryFlags) {\r\n      this.closeListCountryFlags();\r\n    } else {\r\n      this.openListCountryFlags();\r\n    }\r\n  }\r\n\r\n  private openListCountryFlags(): void {\r\n    this.isShowListCountryFlags = true;\r\n    this.subscribeOutsideClickSelectFlags();\r\n  }\r\n\r\n  private closeListCountryFlags(): void {\r\n    this.isShowListCountryFlags = false;\r\n    this.unsubscribeOutsideClickSelectFlags();\r\n  }\r\n\r\n  public changeSelectedCountryCode(value: string): void {\r\n    this.selectedCountryCode = value;\r\n    this.closeListCountryFlags();\r\n    this.changedCountryCode.emit(this.selectedCountryCode);\r\n  }\r\n\r\n  private subscribeOutsideClickSelectFlags(): void {\r\n    this.outsideClickSelectFlags = this.renderer.listen('document', 'click', (event) => {\r\n      if (!this.selectFlagsElementRef.nativeElement.contains(event.target)) {\r\n        this.closeListCountryFlags();\r\n      }\r\n    });\r\n  }\r\n\r\n  private unsubscribeOutsideClickSelectFlags(): void {\r\n    if (this.outsideClickSelectFlags) {\r\n      this.outsideClickSelectFlags();\r\n      this.outsideClickSelectFlags = undefined;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgxFlagPickerComponent } from './ngx-flag-picker/ngx-flag-picker.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NgxFlagPickerComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  exports: [\r\n    NgxFlagPickerComponent,\r\n  ]\r\n})\r\nexport class NgxFlagPickerModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;MAOa,sBAAsB;IAyBjC,YACU,QAAmB,EACnB,iBAAoC;QADpC,aAAQ,GAAR,QAAQ,CAAW;QACnB,sBAAiB,GAAjB,iBAAiB,CAAmB;QA1BtC,4BAAuB,GAAG,KAAK,CAAC;QAc/B,cAAS,GAAG,IAAI,CAAC;QACjB,eAAU,GAAG,IAAI,CAAC;QAClB,cAAS,GAAG,IAAI,CAAC;QAEhB,uBAAkB,GAAG,IAAI,YAAY,EAAU,CAAC;QAI1D,4BAAuB,GAAG,SAAQ,CAAC;KAK9B;IA1BL,IAAI,sBAAsB,CAAC,KAAc;QACvC,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;QACrC,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;KACvC;IACD,IAAI,sBAAsB;QACxB,OAAO,IAAI,CAAC,uBAAuB,CAAC;KACrC;IAsBD,eAAe,CAAC,WAAmB;QACjC,OAAO,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;YACzD,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;YAC9B,WAAW,GAAG,WAAW,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC;KAChD;IAEM,sBAAsB;QAC3B,IAAI,IAAI,CAAC,sBAAsB,EAAE;YAC/B,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAC9B;aAAM;YACL,IAAI,CAAC,oBAAoB,EAAE,CAAC;SAC7B;KACF;IAEO,oBAAoB;QAC1B,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;QACnC,IAAI,CAAC,gCAAgC,EAAE,CAAC;KACzC;IAEO,qBAAqB;QAC3B,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;QACpC,IAAI,CAAC,kCAAkC,EAAE,CAAC;KAC3C;IAEM,yBAAyB,CAAC,KAAa;QAC5C,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACjC,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;KACxD;IAEO,gCAAgC;QACtC,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO,EAAE,CAAC,KAAK;YAC7E,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;gBACpE,IAAI,CAAC,qBAAqB,EAAE,CAAC;aAC9B;SACF,CAAC,CAAC;KACJ;IAEO,kCAAkC;QACxC,IAAI,IAAI,CAAC,uBAAuB,EAAE;YAChC,IAAI,CAAC,uBAAuB,EAAE,CAAC;YAC/B,IAAI,CAAC,uBAAuB,GAAG,SAAS,CAAC;SAC1C;KACF;;;YA9EF,SAAS,SAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,u8BAA+C;;aAEhD;;;YANuE,SAAS;YAAE,iBAAiB;;;kCAiBjG,KAAK;2BACL,KAAK;2BAEL,KAAK;wBAEL,KAAK;yBACL,KAAK;wBACL,KAAK;iCAEL,MAAM;oCAEN,SAAS,SAAC,aAAa;;;MCbb,mBAAmB;;;YAX/B,QAAQ,SAAC;gBACR,YAAY,EAAE;oBACZ,sBAAsB;iBACvB;gBACD,OAAO,EAAE;oBACP,YAAY;iBACb;gBACD,OAAO,EAAE;oBACP,sBAAsB;iBACvB;aACF;;;ACdD;;;;;;"}