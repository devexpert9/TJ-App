import { EventEmitter, Component, Renderer2, ChangeDetectorRef, Input, Output, ViewChild, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';

class NgxFlagPickerComponent {
    constructor(renderer, changeDetectorRef) {
        this.renderer = renderer;
        this.changeDetectorRef = changeDetectorRef;
        this._isShowListCountryFlags = false;
        this.showFlags = true;
        this.showLabels = true;
        this.showArrow = true;
        this.changedCountryCode = new EventEmitter();
        this.outsideClickSelectFlags = () => { };
    }
    set isShowListCountryFlags(value) {
        this._isShowListCountryFlags = value;
        this.changeDetectorRef.markForCheck();
    }
    get isShowListCountryFlags() {
        return this._isShowListCountryFlags;
    }
    getCountryLabel(countryCode) {
        return (this.customLabels && this.customLabels[countryCode]) ?
            this.customLabels[countryCode] :
            countryCode ? countryCode.toUpperCase() : '';
    }
    toggleListCountryFlags() {
        if (this.isShowListCountryFlags) {
            this.closeListCountryFlags();
        }
        else {
            this.openListCountryFlags();
        }
    }
    openListCountryFlags() {
        this.isShowListCountryFlags = true;
        this.subscribeOutsideClickSelectFlags();
    }
    closeListCountryFlags() {
        this.isShowListCountryFlags = false;
        this.unsubscribeOutsideClickSelectFlags();
    }
    changeSelectedCountryCode(value) {
        this.selectedCountryCode = value;
        this.closeListCountryFlags();
        this.changedCountryCode.emit(this.selectedCountryCode);
    }
    subscribeOutsideClickSelectFlags() {
        this.outsideClickSelectFlags = this.renderer.listen('document', 'click', (event) => {
            if (!this.selectFlagsElementRef.nativeElement.contains(event.target)) {
                this.closeListCountryFlags();
            }
        });
    }
    unsubscribeOutsideClickSelectFlags() {
        if (this.outsideClickSelectFlags) {
            this.outsideClickSelectFlags();
            this.outsideClickSelectFlags = undefined;
        }
    }
}
NgxFlagPickerComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-flag-picker',
                template: "<div class=\"select-flags\" #selectFlags>\r\n  <div class=\"country-flag\" tabindex=\"0\" (click)=\"toggleListCountryFlags()\">\r\n    <span *ngIf=\"showFlags\" [ngClass]=\"{ 'flag-icon-margin-right': showLabels }\" class=\"flag-icon flag-icon-{{ selectedCountryCode }}\"></span>\r\n    <span *ngIf=\"showLabels\" class=\"country-code\">{{ getCountryLabel(selectedCountryCode) }}</span>\r\n    <span *ngIf=\"showArrow\">\u25BE</span>\r\n  </div>\r\n  <div class=\"list-country-flags\" *ngIf=\"isShowListCountryFlags\">\r\n    <div class=\"country-flag\" tabindex=\"0\" *ngFor=\"let code of countryCodes\" (click)=\"changeSelectedCountryCode(code)\">\r\n      <span>\r\n        <span *ngIf=\"showFlags\" [ngClass]=\"{ 'flag-icon-margin-right': showLabels }\" class=\"flag-icon flag-icon-{{ code }}\"></span>\r\n        <span *ngIf=\"showLabels\" class=\"country-code\">{{ getCountryLabel(code) }}</span>\r\n      </span>\r\n    </div>\r\n  </div>\r\n</div>",
                styles: [".select-flags{display:inline-block;position:relative;color:#50575e;text-align:left}.flag-icon-margin-right{margin-right:6px}.country-flag{cursor:pointer;outline:none;white-space:nowrap}.list-country-flags{width:-moz-available;position:absolute;max-height:200px;margin-top:10px;padding:5px;background:#fff;border:1px solid #c7c7c7;overflow:auto;z-index:99999}"]
            },] }
];
NgxFlagPickerComponent.ctorParameters = () => [
    { type: Renderer2 },
    { type: ChangeDetectorRef }
];
NgxFlagPickerComponent.propDecorators = {
    selectedCountryCode: [{ type: Input }],
    countryCodes: [{ type: Input }],
    customLabels: [{ type: Input }],
    showFlags: [{ type: Input }],
    showLabels: [{ type: Input }],
    showArrow: [{ type: Input }],
    changedCountryCode: [{ type: Output }],
    selectFlagsElementRef: [{ type: ViewChild, args: ['selectFlags',] }]
};

class NgxFlagPickerModule {
}
NgxFlagPickerModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    NgxFlagPickerComponent,
                ],
                imports: [
                    CommonModule,
                ],
                exports: [
                    NgxFlagPickerComponent,
                ]
            },] }
];

/**
 * Generated bundle index. Do not edit.
 */

export { NgxFlagPickerComponent, NgxFlagPickerModule };
//# sourceMappingURL=ngx-flag-picker.js.map
